# This is a basic workflow to test my binary against valgrind's memcheck tool
# workflow source from https://iramykytyn.dev/how-to-integrate-valgrind-into-github-actions

name: Valgrind

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      - name: Set up environment
        run: |
          sudo apt update
          sudo apt install -y gcc make

      # Install valgrind
      - name: Install Valgrind
        run: |
          sudo apt install valgrind
          echo "Valgrind installed"
          
      - name: Build Tests
        run: |
          make debug
          
      - name: Run Tests with Valgrind
        run: |
           valgrind --leak-check=full  --xml=yes --xml-file=valgrind.xml ./stats

      # 
      - name: Valgrind Memory check
        run: |
           pip install ValgrindCI
           echo "Summary report of errors"
           valgrind-ci output_file.xml --summary
           valgrind-ci output_file.xml --abort-on-errors # abort

